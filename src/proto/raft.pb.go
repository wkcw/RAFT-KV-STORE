// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// You'll likely need to define more specific return codes than these!
type RaftReturnCode int32

const (
	RaftReturnCode_SUCCESS         RaftReturnCode = 0
	RaftReturnCode_FAILURE_TERM    RaftReturnCode = 1
	RaftReturnCode_FAILURE_PREVLOG RaftReturnCode = 2
)

var RaftReturnCode_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE_TERM",
	2: "FAILURE_PREVLOG",
}

var RaftReturnCode_value = map[string]int32{
	"SUCCESS":         0,
	"FAILURE_TERM":    1,
	"FAILURE_PREVLOG": 2,
}

func (x RaftReturnCode) String() string {
	return proto.EnumName(RaftReturnCode_name, int32(x))
}

func (RaftReturnCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

type Entry struct {
	Op                   string   `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
	Term                 int64    `protobuf:"varint,4,opt,name=term,proto3" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{0}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Entry) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *Entry) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

type AERequest struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId             string   `protobuf:"bytes,2,opt,name=leaderId,proto3" json:"leaderId,omitempty"`
	PrevLogIndex         int64    `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm          int64    `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	Entries              []*Entry `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit         int64    `protobuf:"varint,6,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AERequest) Reset()         { *m = AERequest{} }
func (m *AERequest) String() string { return proto.CompactTextString(m) }
func (*AERequest) ProtoMessage()    {}
func (*AERequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{1}
}

func (m *AERequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AERequest.Unmarshal(m, b)
}
func (m *AERequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AERequest.Marshal(b, m, deterministic)
}
func (m *AERequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AERequest.Merge(m, src)
}
func (m *AERequest) XXX_Size() int {
	return xxx_messageInfo_AERequest.Size(m)
}
func (m *AERequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AERequest.DiscardUnknown(m)
}

var xxx_messageInfo_AERequest proto.InternalMessageInfo

func (m *AERequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AERequest) GetLeaderId() string {
	if m != nil {
		return m.LeaderId
	}
	return ""
}

func (m *AERequest) GetPrevLogIndex() int64 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AERequest) GetPrevLogTerm() int64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AERequest) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AERequest) GetLeaderCommit() int64 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

type AEResponse struct {
	Term                 int64          `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success              RaftReturnCode `protobuf:"varint,2,opt,name=success,proto3,enum=proto.RaftReturnCode" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AEResponse) Reset()         { *m = AEResponse{} }
func (m *AEResponse) String() string { return proto.CompactTextString(m) }
func (*AEResponse) ProtoMessage()    {}
func (*AEResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{2}
}

func (m *AEResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AEResponse.Unmarshal(m, b)
}
func (m *AEResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AEResponse.Marshal(b, m, deterministic)
}
func (m *AEResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AEResponse.Merge(m, src)
}
func (m *AEResponse) XXX_Size() int {
	return xxx_messageInfo_AEResponse.Size(m)
}
func (m *AEResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AEResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AEResponse proto.InternalMessageInfo

func (m *AEResponse) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AEResponse) GetSuccess() RaftReturnCode {
	if m != nil {
		return m.Success
	}
	return RaftReturnCode_SUCCESS
}

type RVRequest struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateID          string   `protobuf:"bytes,2,opt,name=candidateID,proto3" json:"candidateID,omitempty"`
	LastLogIndex         int64    `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm          int64    `protobuf:"varint,4,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RVRequest) Reset()         { *m = RVRequest{} }
func (m *RVRequest) String() string { return proto.CompactTextString(m) }
func (*RVRequest) ProtoMessage()    {}
func (*RVRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{3}
}

func (m *RVRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RVRequest.Unmarshal(m, b)
}
func (m *RVRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RVRequest.Marshal(b, m, deterministic)
}
func (m *RVRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RVRequest.Merge(m, src)
}
func (m *RVRequest) XXX_Size() int {
	return xxx_messageInfo_RVRequest.Size(m)
}
func (m *RVRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RVRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RVRequest proto.InternalMessageInfo

func (m *RVRequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RVRequest) GetCandidateID() string {
	if m != nil {
		return m.CandidateID
	}
	return ""
}

func (m *RVRequest) GetLastLogIndex() int64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RVRequest) GetLastLogTerm() int64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type RVResponse struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted          bool     `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RVResponse) Reset()         { *m = RVResponse{} }
func (m *RVResponse) String() string { return proto.CompactTextString(m) }
func (*RVResponse) ProtoMessage()    {}
func (*RVResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b042552c306ae59b, []int{4}
}

func (m *RVResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RVResponse.Unmarshal(m, b)
}
func (m *RVResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RVResponse.Marshal(b, m, deterministic)
}
func (m *RVResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RVResponse.Merge(m, src)
}
func (m *RVResponse) XXX_Size() int {
	return xxx_messageInfo_RVResponse.Size(m)
}
func (m *RVResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RVResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RVResponse proto.InternalMessageInfo

func (m *RVResponse) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RVResponse) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

func init() {
	proto.RegisterEnum("proto.RaftReturnCode", RaftReturnCode_name, RaftReturnCode_value)
	proto.RegisterType((*Entry)(nil), "proto.Entry")
	proto.RegisterType((*AERequest)(nil), "proto.AERequest")
	proto.RegisterType((*AEResponse)(nil), "proto.AEResponse")
	proto.RegisterType((*RVRequest)(nil), "proto.RVRequest")
	proto.RegisterType((*RVResponse)(nil), "proto.RVResponse")
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_b042552c306ae59b) }

var fileDescriptor_b042552c306ae59b = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x9b, 0xa6, 0x5d, 0xd7, 0x93, 0x52, 0x82, 0x11, 0x52, 0xb4, 0xab, 0xc8, 0x17, 0xa8,
	0xe2, 0x62, 0x48, 0x05, 0x71, 0x5f, 0xba, 0x30, 0x45, 0x2a, 0x1a, 0xb8, 0x5b, 0x6f, 0x91, 0x69,
	0xce, 0x50, 0x45, 0x6b, 0x07, 0xdb, 0x8d, 0xd8, 0x13, 0xf0, 0x74, 0xbc, 0x13, 0x8a, 0xe3, 0xa6,
	0x1e, 0x9a, 0x7a, 0x15, 0xfb, 0xf3, 0xf1, 0xf9, 0xcf, 0xff, 0x3b, 0x00, 0x8a, 0xdf, 0x9b, 0xcb,
	0x52, 0x49, 0x23, 0x49, 0xdf, 0x7e, 0xe8, 0x0d, 0xf4, 0x33, 0x61, 0xd4, 0x03, 0x19, 0x43, 0x57,
	0x96, 0x49, 0x90, 0x06, 0x93, 0x21, 0xeb, 0xca, 0x92, 0xc4, 0x10, 0xfe, 0xc4, 0x87, 0xa4, 0x6b,
	0x41, 0xbd, 0xac, 0x49, 0xc5, 0xb7, 0x49, 0xd8, 0x90, 0x8a, 0x6f, 0x09, 0x81, 0x9e, 0x41, 0xb5,
	0x4b, 0x7a, 0x69, 0x30, 0x09, 0x99, 0x5d, 0xd3, 0xbf, 0x01, 0x0c, 0x67, 0x19, 0xc3, 0x5f, 0x7b,
	0xd4, 0xa6, 0xad, 0x08, 0x8e, 0x15, 0xe4, 0x02, 0xce, 0xb7, 0xc8, 0x0b, 0x54, 0x79, 0xe1, 0xda,
	0xb7, 0x7b, 0x42, 0x61, 0x54, 0x2a, 0xac, 0x16, 0xf2, 0x47, 0x2e, 0x0a, 0xfc, 0x6d, 0xc5, 0x42,
	0xf6, 0x88, 0x91, 0x14, 0x22, 0xb7, 0xbf, 0x3d, 0x8a, 0xfb, 0x88, 0xbc, 0x86, 0x01, 0x0a, 0xa3,
	0x36, 0xa8, 0x93, 0x7e, 0x1a, 0x4e, 0xa2, 0xe9, 0xa8, 0x31, 0x7d, 0x69, 0xad, 0xb2, 0xc3, 0x61,
	0xad, 0xd6, 0x28, 0xcf, 0xe5, 0x6e, 0xb7, 0x31, 0xc9, 0x59, 0xa3, 0xe6, 0x33, 0xfa, 0x15, 0xa0,
	0xb6, 0xa3, 0x4b, 0x29, 0x34, 0x3e, 0xe9, 0xe7, 0x2d, 0x0c, 0xf4, 0x7e, 0xbd, 0x46, 0xad, 0xad,
	0x9d, 0xf1, 0xf4, 0x95, 0x53, 0x63, 0xfc, 0xde, 0x30, 0x34, 0x7b, 0x25, 0xe6, 0xb2, 0x40, 0x76,
	0xa8, 0xa2, 0x7f, 0x02, 0x18, 0xb2, 0xd5, 0xa9, 0x88, 0x52, 0x88, 0xd6, 0x5c, 0x14, 0x9b, 0x82,
	0x1b, 0xcc, 0xaf, 0x5c, 0x4a, 0x3e, 0xb2, 0xa3, 0x73, 0x6d, 0xfe, 0x0f, 0xca, 0x67, 0x75, 0x17,
	0xb7, 0xf7, 0x83, 0xf2, 0x10, 0xfd, 0x08, 0x50, 0x0f, 0x72, 0xc2, 0x5c, 0x0a, 0x51, 0x25, 0x0d,
	0x5e, 0x2b, 0x2e, 0x0c, 0x36, 0xef, 0x75, 0xce, 0x7c, 0xf4, 0xe6, 0x0a, 0xc6, 0x8f, 0x8d, 0x92,
	0x08, 0x06, 0xcb, 0xbb, 0xf9, 0x3c, 0x5b, 0x2e, 0xe3, 0x0e, 0x89, 0x61, 0xf4, 0x69, 0x96, 0x2f,
	0xee, 0x58, 0xf6, 0xed, 0x36, 0x63, 0x9f, 0xe3, 0x80, 0xbc, 0x84, 0xe7, 0x07, 0xf2, 0x85, 0x65,
	0xab, 0xc5, 0xcd, 0x75, 0xdc, 0x9d, 0x1a, 0xe8, 0xd5, 0x5d, 0xc8, 0x07, 0x78, 0x36, 0x2b, 0x4b,
	0x14, 0x45, 0xe6, 0xde, 0x28, 0x76, 0x61, 0xb6, 0xff, 0xd4, 0xc5, 0x0b, 0x8f, 0x34, 0x93, 0xd3,
	0x0e, 0x79, 0x0f, 0x91, 0x3b, 0x5f, 0x49, 0x83, 0xed, 0xad, 0x36, 0xe6, 0xf6, 0xd6, 0xd1, 0x2f,
	0xed, 0x7c, 0x3f, 0xb3, 0xec, 0xdd, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x4e, 0x5b, 0x80,
	0x19, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftClient is the client API for Raft service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftClient interface {
	AppendEntries(ctx context.Context, in *AERequest, opts ...grpc.CallOption) (*AEResponse, error)
	RequestVote(ctx context.Context, in *RVRequest, opts ...grpc.CallOption) (*RVResponse, error)
}

type raftClient struct {
	cc *grpc.ClientConn
}

func NewRaftClient(cc *grpc.ClientConn) RaftClient {
	return &raftClient{cc}
}

func (c *raftClient) AppendEntries(ctx context.Context, in *AERequest, opts ...grpc.CallOption) (*AEResponse, error) {
	out := new(AEResponse)
	err := c.cc.Invoke(ctx, "/proto.Raft/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) RequestVote(ctx context.Context, in *RVRequest, opts ...grpc.CallOption) (*RVResponse, error) {
	out := new(RVResponse)
	err := c.cc.Invoke(ctx, "/proto.Raft/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftServer is the server API for Raft service.
type RaftServer interface {
	AppendEntries(context.Context, *AERequest) (*AEResponse, error)
	RequestVote(context.Context, *RVRequest) (*RVResponse, error)
}

// UnimplementedRaftServer can be embedded to have forward compatible implementations.
type UnimplementedRaftServer struct {
}

func (*UnimplementedRaftServer) AppendEntries(ctx context.Context, req *AERequest) (*AEResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppendEntries not implemented")
}
func (*UnimplementedRaftServer) RequestVote(ctx context.Context, req *RVRequest) (*RVResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestVote not implemented")
}

func RegisterRaftServer(s *grpc.Server, srv RaftServer) {
	s.RegisterService(&_Raft_serviceDesc, srv)
}

func _Raft_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AERequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Raft/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).AppendEntries(ctx, req.(*AERequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RVRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Raft/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).RequestVote(ctx, req.(*RVRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Raft_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Raft",
	HandlerType: (*RaftServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntries",
			Handler:    _Raft_AppendEntries_Handler,
		},
		{
			MethodName: "RequestVote",
			Handler:    _Raft_RequestVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}
